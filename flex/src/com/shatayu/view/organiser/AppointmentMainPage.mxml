<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" paddingLeft="40"
	implements="com.shatayu.view.IChildView" creationComplete="onCreate()">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.events.ListEvent;
			import com.shatayu.model.Appointment;
			import com.shatayu.model.Organiser;
			import mx.core.IFlexDisplayObject;
			import com.shatayu.model.Panchkarma;
			import com.shatayu.model.ModelLocatorImp;
			import mx.controls.dataGridClasses.DataGridColumn;
			import com.shatayu.event.ShatayuEvent;
			import com.shatayu.controller.PatientMgmtControllerEvents;
			import mx.collections.ArrayCollection;
			import com.shatayu.model.Patient;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import com.adobe.cairngorm.model.ModelLocator;
			
			
			
			[Bindable]
			public var patient:Patient;
			
			[Bindable]
			private var apptColl:ArrayCollection;
			
			[Bindable]
			private var apptDetailsColl:ArrayCollection;
			
			[Bindable]
			public var parentObj:Object 
			
			private var selectedOrganiserId:Number = -1;
			
			private var currDate:Date = null;
			private var isCreated:Boolean = false;
			
			public function onViewDisplay():void{
				if(!isCreated)
					return;
				var mp:Object = new Object();
				mp["startDate"] = startDate.selectedDate;
				mp["endDate"] = endDate.selectedDate;
				var event:ShatayuEvent = null;
				event = new ShatayuEvent(PatientMgmtControllerEvents.GET_APPOINTMENT_BY_DATE_COMMAND,mp,onDataLoad);
				event.dispatch(); 
			}
			
			public function showDefaultAppointments():void{
				var mp:Object = new Object();
				//if(apptColl != null){
					var startDateObj:Date = new Date();
					startDateObj.date = 1;
					startDateObj.month = currDate.month
					mp["startDate"] = startDateObj;
					startDate.selectedDate = startDateObj;
					
					var endDateObj:Date = new Date();
					endDateObj.date = 1;
					endDateObj.month = currDate.month +1
					endDateObj.date = endDateObj.date - 1;
					mp["endDate"] = endDateObj;
					endDate.selectedDate = endDateObj
				//}
								
				var event:ShatayuEvent = null;
				event = new ShatayuEvent(PatientMgmtControllerEvents.GET_APPOINTMENT_BY_DATE_COMMAND,mp,onDataLoad);
				event.dispatch(); 
				isCreated = true;
			}
			
			private function onCreate():void{
				isCreated = true;
					
				if(currDate != null && (currDate == (new Date()))){
					return;
				}
				if(currDate == null){
					currDate = new Date();
				}
				
				
				showDefaultAppointments();
				
			}
			
			private function selectPatient():void{
				var popUp:Object = PopUpManager.createPopUp(Application.application as DisplayObject,ListPatientsPopUP);
				ListPatientsPopUP(popUp).parentObj = this;
				PopUpManager.centerPopUp(popUp as IFlexDisplayObject);
			}
			
			private function displayAppointments():void{
				if(!validate())return;
				var mp:Object = new Object();
				if(dateSelectionCB.selected){
					mp["startDate"] = startDate.selectedDate ;
					mp["endDate"] = endDate.selectedDate;
				}else{
					mp["startDate"] = null ;
					mp["endDate"] = null;
				}
				
				var event:ShatayuEvent = null;
				
				if( patient ){
					mp["patient"] = patient;
					event  = new ShatayuEvent(PatientMgmtControllerEvents.GET_APPOINTMENT_BY_DATE_AND_PATIENTID_COMMAND,mp,onDataLoad);
				}else{
					event = new ShatayuEvent(PatientMgmtControllerEvents.GET_APPOINTMENT_BY_DATE_COMMAND,mp,onDataLoad);
				}
			 	event.dispatch(); 
			}
			
			private function validate():Boolean{
				if(endDate.selectedDate.getTime() < startDate.selectedDate.getTime()){
					Alert.show("End Date should be greater than start date");
					return false;
				}
				return true;
			}
			
			public function onDataLoad(obj:Object):void{
				apptColl = obj as ArrayCollection;
				
				for(var i:int =0 ;i< apptColl.length;i++){
					if(Organiser(apptColl.getItemAt(i)).organiserId == selectedOrganiserId){
						appointment.selectedIndex = i;
						appointment.dispatchEvent(new ListEvent(ListEvent.CHANGE));
					}
				}
				sortApptDate();
			}	
			
			private function sortApptDate():void{
        	
		        	if(apptColl != null){
						var sort:Sort = new Sort();
						var sortField:SortField = new SortField("startDate", true , false);
						sortField.compareFunction = sortDate;
					    sort.fields = [sortField];
					    apptColl.sort = sort;
					    apptColl.refresh();	
					}
	        }
	        
	        private function sortDate(obj1:Object, obj2:Object):int{
			  var d1:Number = (new Date(Date.parse(obj1.startDate))).getTime();
			  var d2:Number = (new Date(Date.parse(obj2.startDate))).getTime();
			  if(d1 < d2) {
			    return -1;
			  } else if(d1 == d2) {
			    return 0;
			  }
			  return 1;
			}
			
			public function apptLabelFunc(item:Object,column:DataGridColumn):String {
				if(column.dataField+"" == "panchkarma"){
					var panchkarmaList:ArrayCollection =  ModelLocatorImp.getInstance().panchkarmaList;
		        	for(var i:int =0;i<panchkarmaList.length;i++){
		        		if(Panchkarma(panchkarmaList.getItemAt(i)).panchkarmaId == item.panchkarmaId){
		        			return Panchkarma(panchkarmaList.getItemAt(i)).panchkarmaName;
		        		}
		        	}
		            
		            return "";
				}else  if(column.dataField+"" == "startDate" || column.dataField+"" == "endDate" ){
					return getDateInFormate(item[column.dataField]);
	   			}else  if(column.dataField+"" == "lastName"){
	   				return Organiser(item).patient.lastName;
	   				
	   			}else if(column.dataField+"" == "firstName"){
	   				return Organiser(item).patient.firstName;
	   			}else if(column.dataField+"" == "status"){
	   				return Organiser(item).status;
	   			}
   			
   				return "";
        	}	
        
        private function getDateInFormate(dt:Date):String{
        	 return dt.getDate() + "-"+(dt.getMonth() + 1)+"-"+dt.getFullYear();
        }
        
        private function getAppointmentDetails():void{
        	var org:Organiser = appointment.selectedItem as Organiser;
        	
        	apptDetailsColl = org.appointment;
        	if(apptDetailsColl != null){
				var sort:Sort = new Sort();
				var sortField:SortField = new SortField("apptStartDate", true , false);
				sortField.compareFunction = sortDateDetails;
			    sort.fields = [sortField];
			    apptDetailsColl.sort = sort;
			    apptDetailsColl.refresh();	
			}
        }
        
        private function sortDateDetails(obj1:Object, obj2:Object):int{
			  var d1:Number = (new Date(Date.parse(obj1.apptStartDate))).getTime();
			  var d2:Number = (new Date(Date.parse(obj2.apptStartDate))).getTime();
			  if(d1 < d2) {
			    return -1;
			  } else if(d1 == d2) {
			    return 0;
			  }
			  return 1;
			}
        
		public function apptDetailsLableFunc(item:Object,column:DataGridColumn):String {
			if(column.dataField+"" == "apptTime"){
				return 	getDateInFormate(Appointment(item).apptStartDate) + 
					" ("+getTimeFormatted(Appointment(item).apptStartDate)+" - "+getTimeFormatted(Appointment(item).apptEndDate) +")"
	           
			}
   			return "";
    	}
    	
    	private function getTimeFormatted(dt:Date):String{
			var hrs:Number = dt.getHours();
			var min:Number = dt.getMinutes();
			var offsetStr:String  = "am";
			if(hrs >= 12){
				if(hrs > 12)
					hrs = hrs - 12;
				offsetStr = "pm";
			}
			
			return hrs +":"+(((min+"").length == 1)?"0"+min:min) + ""+offsetStr;
		}	
		
		private function onEditAppointment():void{
			var org:Organiser = appointment.selectedItem as Organiser;
			OrganiserDisplay(parentObj).apptForm.appointment = org;
			
			OrganiserDisplay(parentObj).tabnav.selectedChild =OrganiserDisplay(parentObj).apptForm; 
			trace("  _inEditModeMapin page set to true ");
			OrganiserDisplay(parentObj).apptForm.inEditMode = true;	
			
		}
		
		private function deleteAppointment():void{
			var org:Organiser = appointment.selectedItem as Organiser;
        	
        	var event:ShatayuEvent = new ShatayuEvent(PatientMgmtControllerEvents.DELETE_APPOINTMENT_COMMAND,org,onDeletAppointment);
        	event.dispatch();	
		}
		
		public function onDeletAppointment(obj:Object):void{
			var org:Organiser = obj as Organiser;
			apptColl.removeItemAt(apptColl.getItemIndex(org));
			apptDetailsColl = null;
		}
		
		public function onAppointmentEditedCreatedDeleted():void{
			if(appointment.selectedItem == null)return;
			selectedOrganiserId = (appointment.selectedItem as Organiser).organiserId;
			dispApptBtn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
		}
		
	
			
		]]>
	</mx:Script>
	
	<mx:HBox>
		
		<mx:HBox>
			<mx:Button label="Select Patient" click = "selectPatient()" styleName="myButton"/>
			<mx:Button label="Clear Patient Field" click = "{patient = null}" styleName="myButton"/>
			<mx:Label id= "patientName" text = "{patient.firstName + ' '+ patient.lastName}" />
			
		</mx:HBox> 
	</mx:HBox>
	<mx:HBox>
		<mx:HBox>
			<mx:CheckBox id= "dateSelectionCB" selected="true" />
			<mx:FormItem label = "Start Date">
				<mx:DateField id= "startDate" selectedDate="{new Date()}" formatString="DD/MM/YYYY"/>
			</mx:FormItem>
			
			<mx:FormItem label = "End Date">
				<mx:DateField id= "endDate" selectedDate="{new Date()}" formatString="DD/MM/YYYY"/>
			</mx:FormItem>
		</mx:HBox> 
	</mx:HBox>
	
	<mx:Button label=" Display Appointments " id = "dispApptBtn" click = "displayAppointments()" styleName="myButton"/>
	<mx:Spacer height = "30"/>
	<mx:Label text="Appointments:" fontWeight="bold" fontSize="12"/>
	<mx:HBox>
		<mx:Button label="Edit" click = "onEditAppointment()" styleName="myButton"/>
		<mx:Button label="Delete" click = "deleteAppointment()" styleName="myButton"/>
	</mx:HBox>
	<mx:DataGrid id = "appointment" dataProvider="{apptColl}" change="getAppointmentDetails()" 
		doubleClick="onEditAppointment()" doubleClickEnabled="true">
		<mx:columns>
			<mx:DataGridColumn dataField = "firstName" headerText="Patient First name" labelFunction="apptLabelFunc" />
			<mx:DataGridColumn dataField = "lastName" headerText="Patient Last name" labelFunction="apptLabelFunc"/>
			<mx:DataGridColumn dataField = "panchkarma" headerText="Panchkarma" labelFunction="apptLabelFunc"/>
			<mx:DataGridColumn dataField = "treatmentDetails" headerText="TreatmentDetails"/>
			<mx:DataGridColumn dataField = "startDate" headerText="startDate" labelFunction="apptLabelFunc"/>
			<mx:DataGridColumn dataField = "endDate" headerText="endDateDate" labelFunction="apptLabelFunc"/>
			<mx:DataGridColumn dataField = "status" headerText="Status" labelFunction="apptLabelFunc"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:Spacer height = "30"/>
	<mx:Label text="Appointment Details:" fontWeight="bold" fontSize="12"/>
	<mx:DataGrid width ="60%" dataProvider="{apptDetailsColl}">
		<mx:columns>
			<mx:DataGridColumn dataField="apptTime" headerText="Appointment Time" labelFunction="apptDetailsLableFunc"/>
			<mx:DataGridColumn headerText="Status" dataField="apptStatus"/>
		</mx:columns>
	</mx:DataGrid>
</mx:VBox>
